INSERT INTO tablename ( column names ) VALUES ( values for each of the column names ) #it works without the column names but when we only want to insert values
for certain columns
INSERT INTO students ( studentID, name, email, password ) VALUES ( 1, "nice robin", "nicorobin@gmail.com", "dereshishi")

Adding multiple rows
INSERT INTO tablename VALUES (), (), ()

################# Retrieve ##############
SELECT * FROM tablename
SELECT name, sex, survived FROM titanic

SELECT name AS passengername, sex AS gender, survived FROM titanic
SELECT name, sibsp + parch AS family, survived FROM titanic
SELECT name, age + 103 AS currentage FROM titanic

SELECT DISTINCT sex FROM titanic #output two rows, male and female
SELECT DISTINCT pclass, embarked FROM titanic     # gives all the unique combinations of the two variables

SELECT * FROM titanic WHERE survived = 0       #all the rows of the dead
SELECT column names FROM table WHERE condition1 AND/OR condition2
SELECT name, sex, survived FROM titanic WHERE age between 20 AND 30



###################        Order of execution       ###################
                           F J W G H S D O
FROM      JOIN      WHERE     GROUP BY     HAVING      SELECT      DISTINCT      ORDER BY
FRANK JOHN'S WICKED GRAVE HAUNTS SEVERAL DULL OWLS


SELECT cols FROM tablename WHERE colname IN/NOT IN  ( 'category1', 'category2' )
SELECT cols FROM tablename WHERE colname LIKE "A%"        #all the rows of cols where colname starts with A
SELECT cols FROM tablename WHERE colname LIKE "%A%"        #all the rows of cols where colname that has A
SELECT cols FROM tablename WHERE colname LIKE "Usop_"     #will show all the rows containing five letter words with the first four letters being usop


UPDATE tablename SET colname = "nami"     #all the values in that column is now nami
UPDATE users SET name = "luffy", email = "roger@gmail.com" WHERE condition1 AND condition2

DELETE FROM tablename WHERE condition1 AND condition2
DELETE FROM tablename WHERE 1   #truncate is a special case of delete


##################    Functions   ###################
SELECT title, ABS ( gross - budget ) AS profit FROM movies;
# ROUND ( mathematical operation, 2 ) - 2 decimal points
# CEIL, FLOOR, UPPER, LOWER
SELECT title, CONCAT(actor, ' ', director) AS crew FROM movies;
SELECT title, LENGTH(title) AS length_of_title FROM movies;
### AGGREGATE
MAX(colname) - maximum row of that col
similarly, MIN, SUM - sum of the entire column, AVG - average of the entire column
COUNT(*) - returns number of rows
COUNT(DISTINCT(colname)) - number of distinct elements in col
